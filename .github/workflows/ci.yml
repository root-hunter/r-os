name: CI & Deploy

on:
  push:
    tags:
      - 'v*.*.*'
    branches: [release]
  pull_request:
    branches: [release]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.cargo_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version
        id: cargo_version
        run: |
          VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      
      - name: Install wasm-pack
        run: cargo install wasm-pack

      - name: Build wasm
        run: wasm-pack build --target web

      - name: Upload pkg artifact
        uses: actions/upload-artifact@v4
        with:
          name: wasm-pkg
          path: pkg/

  deploy_demo:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download pkg artifact
        uses: actions/download-artifact@v4
        with:
          name: wasm-pkg
          path: pkg

      - name: Copy static files
        run: |
          mkdir -p deploy
          cp -r static/* deploy/
          cp -r pkg deploy/pkg

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download pkg artifact
        uses: actions/download-artifact@v4
        with:
          name: wasm-pkg
          path: pkg
      
      - name: Prepare release assets
        run: |
          mkdir -p release/r_os
          cp -r pkg/* release/r_os/
          cp static/bootstrap.js release/

      - name: Release wasm artifact
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.build.outputs.version }}
          name: rOS v${{ needs.build.outputs.version }}
          body: Release rOS v${{ needs.build.outputs.version }}
          files: release/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}